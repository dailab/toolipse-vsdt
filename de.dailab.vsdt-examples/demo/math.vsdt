<?xml version="1.0" encoding="UTF-8"?>
<vsdt:BusinessProcessSystem xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:vsdt="http://de.dailab.vsdt" name="Math" documentation="Process Diagrams to be transformed to both BPEL and JIAC" id="_APPFIIaNEd6vMcmgfX7H1A" version="0.1" author="Tobias KÃ¼ster" expressionLanguage="VSDT Expression Language" creationDate="2009-08-11T17:38:23.218+0200" modificationDate="2009-08-27T17:05:44.025+0200">
  <businessProcesses name="Algorithms" documentation="This diagram contains a few pools representing simple algorithms. While algorithms surely are not a typical usecase for BPMN, they do well for presenting the capabilities of the VSDT. The algorithms can equally well be translated to BPEL and JIAC, they can be interpreted by the VSDT's built-in interpreter and a textual representation can be generated." id="_fkHEAIaSEd6vMcmgfX7H1A" participants="_hQH54IaSEd6vMcmgfX7H1A">
    <pools name="Extract Root" documentation="In this process the square root of the input value is approximated." id="_mkhLsIaSEd6vMcmgfX7H1A" participant="_hQH54IaSEd6vMcmgfX7H1A" boundaryVisible="false">
      <process name="Extract Root_Process" id="_mkhLsoaSEd6vMcmgfX7H1A">
        <properties name="number" type="double"/>
        <properties name="current" type="double"/>
        <properties name="eps" type="double"/>
        <properties name="lastLesser" type="double"/>
        <properties name="lastGreater" type="double"/>
        <properties name="d" type="double"/>
      </process>
      <lanes id="_mkhLsYaSEd6vMcmgfX7H1A" boundaryVisible="false">
        <containedFlowObjects xsi:type="vsdt:Start" name="start" documentation="The input message is received and its payload is bound to the respective process properties." id="_qJMMUIaSEd6vMcmgfX7H1A" trigger="MESSAGE" message="//@messages.0" implementation="//@implementations.0">
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.0" assignTime="END">
            <from expression="$input"/>
          </assignments>
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.2" assignTime="END">
            <from expression="$epsilon"/>
          </assignments>
        </containedFlowObjects>
        <containedFlowObjects xsi:type="vsdt:Gateway" name="(join)" documentation="This is the merge for the loop." id="_EOXfUJIhEd6PkL1AU2eJuA"/>
        <containedFlowObjects xsi:type="vsdt:Gateway" name="input valid?" documentation="Here it is checked whether the input is valid. Epsilon must be greater than zero and the number must not be negative." id="_VzrwMJIhEd6PkL1AU2eJuA" markerVisible="true"/>
        <containedFlowObjects xsi:type="vsdt:End" name="invalid input" documentation="In case of invalid input, the return value will be zero. Further, an error message is returned." id="_aH9BwJIhEd6PkL1AU2eJuA" trigger="MESSAGE" message="//@messages.1" implementation="//@implementations.0">
          <assignments to="//@messages.1/@properties.0">
            <from expression="0"/>
          </assignments>
          <assignments to="//@messages.1/@properties.1">
            <from expression="'input ' ++ $number ++',' ++ $eps++ ' is invalid'"/>
          </assignments>
        </containedFlowObjects>
        <containedFlowObjects xsi:type="vsdt:Activity" name="initialize&#xD;&#xA;variables" documentation="This initializes the variables: The upper and lower bounds and the currently tested number." id="_CCIJ4JIkEd6PkL1AU2eJuA">
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.1" assignTime="END">
            <from expression="0"/>
          </assignments>
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.3" assignTime="END">
            <from expression="0"/>
          </assignments>
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.4" assignTime="END">
            <from expression="$number"/>
          </assignments>
        </containedFlowObjects>
        <containedFlowObjects xsi:type="vsdt:Activity" name="calculate delta" documentation="Delta is the difference between the input number and the square of the currently tested number." id="_HYdVYJIkEd6PkL1AU2eJuA">
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.5" assignTime="END">
            <from expression="$number - ($current*$current)"/>
          </assignments>
        </containedFlowObjects>
        <containedFlowObjects xsi:type="vsdt:Gateway" name="eps greater than d?" documentation="Test whether the delta is greater than epilon. In this case the approximation continues." id="_H45I8JIkEd6PkL1AU2eJuA" markerVisible="true"/>
        <containedFlowObjects xsi:type="vsdt:End" name="return result" documentation="Returns the result of the approximation and a success message." id="_Ki8UYJIkEd6PkL1AU2eJuA" trigger="MESSAGE" message="//@messages.1" implementation="//@implementations.0">
          <assignments to="//@messages.1/@properties.0">
            <from expression="$current"/>
          </assignments>
          <assignments to="//@messages.1/@properties.1">
            <from expression="'square root found'"/>
          </assignments>
        </containedFlowObjects>
        <containedFlowObjects xsi:type="vsdt:Gateway" name="too large?" documentation="Checks whether the currently tested number is too large or too small." id="_fkLSgJIkEd6PkL1AU2eJuA" markerVisible="true"/>
        <containedFlowObjects xsi:type="vsdt:Activity" name="try smaller &#xD;&#xA;number" documentation="The currently tested number is used as the new upper bound and is then set to be the average of itself and the lower bound." id="_NDizcJIlEd6PkL1AU2eJuA">
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.4" assignTime="END">
            <from expression="$current"/>
          </assignments>
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.1" assignTime="END">
            <from expression="($current+$lastLesser)/2"/>
          </assignments>
        </containedFlowObjects>
        <containedFlowObjects xsi:type="vsdt:Activity" name="try greater &#xD;&#xA;number" documentation="The currently tested number is used as the new lower bound and is then set to be the average of itself and the upper bound." id="_oAW_MJIlEd6PkL1AU2eJuA">
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.3" assignTime="END">
            <from expression="$current"/>
          </assignments>
          <assignments to="//@businessProcesses.0/@pools.0/@process/@properties.1" assignTime="END">
            <from expression="($current+$lastGreater)/2"/>
          </assignments>
        </containedFlowObjects>
        <containedFlowObjects xsi:type="vsdt:Activity" name="print" documentation="Here, the currently tested number is printed. The script's body can not be translated to BPEL, thus this works only when translating to JIAC." id="_C3vEwJI7Ed6UJ5IrXYpPfw" activityType="SCRIPT" script="print $current;"/>
      </lanes>
    </pools>
    <connections xsi:type="vsdt:SequenceFlow" id="_dAcuUJIgEd6PkL1AU2eJuA" source="_qJMMUIaSEd6vMcmgfX7H1A" target="_VzrwMJIhEd6PkL1AU2eJuA"/>
    <connections xsi:type="vsdt:SequenceFlow" id="_aIZtsJIhEd6PkL1AU2eJuA" conditionType="EXPRESSION" source="_VzrwMJIhEd6PkL1AU2eJuA" target="_aH9BwJIhEd6PkL1AU2eJuA">
      <conditionExpression expression="($number &lt; 0) &amp;&amp; ($eps &lt;= 0)"/>
    </connections>
    <connections xsi:type="vsdt:SequenceFlow" id="_CCR65JIkEd6PkL1AU2eJuA" source="_CCIJ4JIkEd6PkL1AU2eJuA" target="_EOXfUJIhEd6PkL1AU2eJuA"/>
    <connections xsi:type="vsdt:SequenceFlow" id="_Vz1hMJIhEd6PkL1AU2eJuA" conditionType="DEFAULT" source="_VzrwMJIhEd6PkL1AU2eJuA" target="_CCIJ4JIkEd6PkL1AU2eJuA"/>
    <connections xsi:type="vsdt:SequenceFlow" id="_H5C59ZIkEd6PkL1AU2eJuA" source="_HYdVYJIkEd6PkL1AU2eJuA" target="_H45I8JIkEd6PkL1AU2eJuA"/>
    <connections xsi:type="vsdt:SequenceFlow" id="_Ki8UZpIkEd6PkL1AU2eJuA" conditionType="DEFAULT" source="_H45I8JIkEd6PkL1AU2eJuA" target="_Ki8UYJIkEd6PkL1AU2eJuA"/>
    <connections xsi:type="vsdt:SequenceFlow" id="_iiA8oJIkEd6PkL1AU2eJuA" conditionType="EXPRESSION" source="_H45I8JIkEd6PkL1AU2eJuA" target="_fkLSgJIkEd6PkL1AU2eJuA">
      <conditionExpression expression="(($d &lt; 0) &amp;&amp; ((0 - $d) > $eps)) || (($d > 0) &amp;&amp; ($d > $eps))"/>
    </connections>
    <connections xsi:type="vsdt:SequenceFlow" name="too large" id="_qZvRYJIlEd6PkL1AU2eJuA" conditionType="EXPRESSION" source="_fkLSgJIkEd6PkL1AU2eJuA" target="_NDizcJIlEd6PkL1AU2eJuA">
      <conditionExpression expression="($current*$current) > $number"/>
    </connections>
    <connections xsi:type="vsdt:SequenceFlow" name="too small" id="_rIJ2kJIlEd6PkL1AU2eJuA" conditionType="DEFAULT" source="_fkLSgJIkEd6PkL1AU2eJuA" target="_oAW_MJIlEd6PkL1AU2eJuA"/>
    <connections xsi:type="vsdt:SequenceFlow" id="_uZUsYJIlEd6PkL1AU2eJuA" source="_NDizcJIlEd6PkL1AU2eJuA" target="_EOXfUJIhEd6PkL1AU2eJuA"/>
    <connections xsi:type="vsdt:SequenceFlow" id="_u9xdQJIlEd6PkL1AU2eJuA" source="_oAW_MJIlEd6PkL1AU2eJuA" target="_EOXfUJIhEd6PkL1AU2eJuA"/>
    <connections xsi:type="vsdt:SequenceFlow" id="_C7KMMJI7Ed6UJ5IrXYpPfw" source="_C3vEwJI7Ed6UJ5IrXYpPfw" target="_HYdVYJIkEd6PkL1AU2eJuA"/>
    <connections xsi:type="vsdt:SequenceFlow" id="_HYnGYJIkEd6PkL1AU2eJuA" source="_EOXfUJIhEd6PkL1AU2eJuA" target="_C3vEwJI7Ed6UJ5IrXYpPfw"/>
  </businessProcesses>
  <participants name="Mathematican" id="_hQH54IaSEd6vMcmgfX7H1A" associatedProcesses="_fkHEAIaSEd6vMcmgfX7H1A" associatedPools="_mkhLsIaSEd6vMcmgfX7H1A"/>
  <messages name="GetSquareRootRequest">
    <properties name="input" type="double"/>
    <properties name="epsilon" type="double"/>
  </messages>
  <messages name="GetSquareRootResponse">
    <properties name="result" type="double"/>
    <properties name="message" type="string"/>
  </messages>
  <implementations participant="_hQH54IaSEd6vMcmgfX7H1A" interface="TestService" operation="SquareRoot" inputMessage="//@messages.0" outputMessage="//@messages.1"/>
</vsdt:BusinessProcessSystem>

import de.dailab.jiactng.examples.auction.onto.Auction ; import de.dailab.jiactng.examples.auction.onto.Bid ; import
de.dailab.jiactng.examples.auction.onto.Message ; node

service CloseAuction_Auctioneer_auctionover ( in ) ( out ) {
    var $theAuction : Auction ;
    $theAuction = new Auction ( ) ;
    var $theBid : Bid ;
    $theBid = new Bid ( ) ;
    var $exists : bool ;
    listen "auctioneer_notifyshipped" ;
    listen "auctioneer_notifypaid" ;
    {
        {
            {
                print "     Auctioneer: checking whether a bid exists..." ;
                $theBid = $theAuction . highestBid ;
                $exists = $theBid . value > 0 ;
            }
        }
        if ( $exists ) {
            par {
                { var $message : Message ;
                $message = new Message ( ) ;
                $message . message = "Your bid has been awarded!" ;
                send $message to "bidder_notifysold" ;
                } { var $message : Message ;
                $message = new Message ( ) ;
                $message . message = "Your item has been sold!" ;
                send $message to "seller_notifysold" ;
                } }
            switch {
                case ( onmessage Message at "auctioneer_notifypaid" ) {
                    {
                        var $message : Message ;
                        $message = new Message ( ) ;
                        receive $message from "auctioneer_notifypaid" timeout 10000 ;
                    }
                    {
                        var $message : Message ;
                        $message = new Message ( ) ;
                        $message . message = "We have received the payment; send the goods now!" ;
                        send $message to "seller_notifypaid" ;
                    }
                    switch {
                        case ( onmessage Message at "auctioneer_notifyshipped" ) {
                            {
                                var $message : Message ;
                                $message = new Message ( ) ;
                                receive $message from "auctioneer_notifyshipped" timeout 10000 ;
                            }
                            {
                                var $message : Message ;
                                $message = new Message ( ) ;
                                $message . message = "The seller has shipped the good; it should arrive shortly." ;
                                send $message to "bidder_notifyshipped" ;
                            }
                            {
                                print "Executing transfermoneytoseller" ;
                            }
                        }
                        case ( ontimer timeout 5000 ) {
                            {
                                var $message : Message ;
                                $message = new Message ( ) ;
                                $message . message = "The seller did not ship the good. We will transfer your money back." ;
                                send $message to "bidder_notifynotshipped" ;
                            }
                            {
                                print "Executing transfermoneyback" ;
                            }
                        }
                    }
                }
                case ( ontimer timeout 5000 ) {
                    {
                        var $message : Message ;
                        $message = new Message ( ) ;
                        $message . message = "We are sorry to inform you that we have received no payment." ;
                        send $message to "seller_notifynotpaid" ;
                    }
                }
            }
        }
        else {
            {
                var $message : Message ;
                $message = new Message ( ) ;
                $message . message = "Sorry, your goods have not been sold." ;
                send $message to "seller_notifynotsold" ;
            }
        }
        {
            print "Executing removeauction" ;
        }
    }
}
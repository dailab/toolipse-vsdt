import de.dailab.jiactng.examples.auction.onto.Auction ; import de.dailab.jiactng.examples.auction.onto.Bid ; import
de.dailab.jiactng.examples.auction.onto.Message ; node

service CloseAuction_Seller ( in ) ( out ) {
}
node

service CloseAuction_Seller_0_sold ( in $message : Message ) ( out ) {
    listen "seller_notifypaid" ;
    listen "seller_notifynotpaid" ;
    {
        switch {
            case ( onmessage Message at "seller_notifypaid" ) {
                {
                    var $message : Message ;
                    receive $message from "seller_notifypaid" timeout 10000 ;
                }
                {
                    print "Executing sendgoods" ;
                }
                {
                    var $message : Message ;
                    send $message to "auctioneer_notifyshipped" ;
                }
                {
                    print "Executing ratepositively" ;
                }
            }
            case ( onmessage Message at "seller_notifynotpaid" ) {
                {
                    var $message : Message ;
                    receive $message from "seller_notifynotpaid" timeout 10000 ;
                }
                {
                    print "Executing ratenegatively" ;
                }
                {
                }
                {
                    print "Executing dismissauction" ;
                }
            }
        }
    }
    invoke CloseAuction_Seller ( ) ( ) ; }
node

service CloseAuction_Seller_1_notsold ( in $message : Message ) ( out ) {
    {
        {
            print "Executing dismissauction" ;
        }
    }
    invoke CloseAuction_Seller ( ) ( ) ; }
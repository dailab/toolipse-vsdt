<?xml version="1.0" encoding="ASCII"?>
<bpws:process xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns1="http://LightAlarm/WSDL/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" abstractProcess="no" enableInstanceCompensation="no" expressionLanguage="http://www.w3.org/TR/1999/REC-xpath-19991116" name="LightAlarm" queryLanguage="" suppressJoinFailure="no" targetNamespace="http://LightAlarm">
  <bpws:partnerLinks>
    <bpws:partnerLink myRole="SHEA_myRole" name="SHEA" partnerLinkType="ns1:SHEA_PLT"/>
    <bpws:partnerLink name="Logger" partnerLinkType="ns1:Logger_PLT" partnerRole="Logger_partnerRole"/>
    <bpws:partnerLink name="WeatherProvider" partnerLinkType="ns1:WeatherProvider_PLT" partnerRole="WeatherProvider_partnerRole"/>
    <bpws:partnerLink name="Ivistar" partnerLinkType="ns1:Ivistar_PLT" partnerRole="Ivistar_partnerRole"/>
    <bpws:partnerLink name="LocationProvider" partnerLinkType="ns1:LocationProvider_PLT" partnerRole="LocationProvider_partnerRole"/>
    <bpws:partnerLink name="Radio" partnerLinkType="ns1:Radio_PLT" partnerRole="Radio_partnerRole"/>
  </bpws:partnerLinks>
  <bpws:variables>
    <bpws:variable messageType="ns1:LAStartMessage_MessageDataMessage" name="LAStartMessage_MessageData"/>
    <bpws:variable messageType="ns1:logRequest_MessageDataMessage" name="logRequest_MessageData"/>
    <bpws:variable messageType="ns1:GetWeatherRequest_MessageDataMessage" name="GetWeatherRequest_MessageData"/>
    <bpws:variable messageType="ns1:GetWeatherResponse_MessageDataMessage" name="GetWeatherResponse_MessageData"/>
    <bpws:variable messageType="ns1:SetValueRequest_MessageDataMessage" name="SetValueRequest_MessageData"/>
    <bpws:variable name="GraduallyBrightenLights_loopCounter" type="xsd:integer"/>
    <bpws:variable messageType="ns1:IsInZoneRequest_MessageDataMessage" name="IsInZoneRequest_MessageData"/>
    <bpws:variable messageType="ns1:IsInZoneResponse_MessageDataMessage" name="IsInZoneResponse_MessageData"/>
    <bpws:variable messageType="ns1:PlayPauseRequest_MessageDataMessage" name="PlayPauseRequest_MessageData"/>
    <bpws:variable messageType="ns1:LightAlarm_Process_ProcessDataMessage" name="LightAlarm_Process_ProcessData"/>
  </bpws:variables>
  <bpws:sequence>
    <bpws:receive name="Start" createInstance="yes" operation="start" partnerLink="SHEA" portType="ns1:LightAlarmPT" variable="LAStartMessage_MessageData"/>
    <bpws:assign name="LightAlarm_startAssignments_and_Start_endAssignments_and_log_startAssignments">
      <bpws:copy>
        <bpws:from expression="0"/>
        <bpws:to part="tmpDimStep" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="0"/>
        <bpws:to part="tmpVolume" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="bpws:getVariableData('LAStartMessage_MessageData','paramUsername')"/>
        <bpws:to part="inUsername" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="bpws:getVariableData('LAStartMessage_MessageData','paramWaketime')"/>
        <bpws:to part="inWaketime" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="bpws:getVariableData('LAStartMessage_MessageData','paramRoomName')"/>
        <bpws:to part="inRoomName" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="bpws:getVariableData('LAStartMessage_MessageData','paramLightIDs')"/>
        <bpws:to part="inLightIDs" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="bpws:getVariableData('LAStartMessage_MessageData','paramBlindsIDs')"/>
        <bpws:to part="inBlindsIDs" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="bpws:getVariableData('LAStartMessage_MessageData','paramCity')"/>
        <bpws:to part="inCity" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="bpws:getVariableData('LAStartMessage_MessageData','paramCountry')"/>
        <bpws:to part="inCountry" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="bpws:getVariableData('LAStartMessage_MessageData','paramUseLight')"/>
        <bpws:to part="inUseLight" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="bpws:getVariableData('LAStartMessage_MessageData','paramUseMusic')"/>
        <bpws:to part="inUseMusic" variable="LightAlarm_Process_ProcessData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="'Process started'"/>
        <bpws:to part="message" variable="logRequest_MessageData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="1"/>
        <bpws:to part="level" variable="logRequest_MessageData"/>
      </bpws:copy>
    </bpws:assign>
    <bpws:invoke name="log" inputVariable="logRequest_MessageData" operation="log" partnerLink="Logger" portType="ns1:LoggingPT"/>
    <bpws:wait name="waketime" until="bpws:getVariableData('LightAlarm_Process_ProcessData','inWaketime')"/>
    <bpws:switch>
      <bpws:case condition="bpws:getVariableData('LightAlarm_Process_ProcessData','inUseLight')">
        <bpws:sequence>
          <bpws:assign name="GetWeather_startAssignments">
            <bpws:copy>
              <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inCountry')"/>
              <bpws:to part="country" variable="GetWeatherRequest_MessageData"/>
            </bpws:copy>
            <bpws:copy>
              <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inCity')"/>
              <bpws:to part="city" variable="GetWeatherRequest_MessageData"/>
            </bpws:copy>
          </bpws:assign>
          <bpws:invoke name="GetWeather" inputVariable="GetWeatherRequest_MessageData" operation="GetWeather" outputVariable="GetWeatherResponse_MessageData" partnerLink="WeatherProvider" portType="ns1:WeatherProxyPT"/>
          <bpws:assign name="GetWeather_endAssignments_and_log_startAssignments">
            <bpws:copy>
              <bpws:from expression="bpws:getVariableData('GetWeatherResponse_MessageData','weatherdata')"/>
              <bpws:to part="tmpWeather" variable="LightAlarm_Process_ProcessData"/>
            </bpws:copy>
            <bpws:copy>
              <bpws:from expression="concat('got weather: ',bpws:getVariableData('LightAlarm_Process_ProcessData','tmpWeather'))"/>
              <bpws:to part="message" variable="logRequest_MessageData"/>
            </bpws:copy>
            <bpws:copy>
              <bpws:from expression="1"/>
              <bpws:to part="level" variable="logRequest_MessageData"/>
            </bpws:copy>
          </bpws:assign>
          <bpws:invoke name="log" inputVariable="logRequest_MessageData" operation="log" partnerLink="Logger" portType="ns1:LoggingPT"/>
          <bpws:flow>
            <bpws:switch>
              <bpws:case condition="true()">
                <bpws:sequence>
                  <bpws:assign name="Blindsup_startAssignments">
                    <bpws:copy>
                      <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inRoomName')"/>
                      <bpws:to part="room" variable="SetValueRequest_MessageData"/>
                    </bpws:copy>
                    <bpws:copy>
                      <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inBlindsIDs')"/>
                      <bpws:to part="line" variable="SetValueRequest_MessageData"/>
                    </bpws:copy>
                    <bpws:copy>
                      <bpws:from expression="'100'"/>
                      <bpws:to part="value" variable="SetValueRequest_MessageData"/>
                    </bpws:copy>
                  </bpws:assign>
                  <bpws:invoke name="Blindsup" inputVariable="SetValueRequest_MessageData" operation="SetValue" partnerLink="Ivistar" portType="ns1:IvistarProxyPT"/>
                </bpws:sequence>
              </bpws:case>
              <bpws:otherwise>
                <bpws:empty/>
              </bpws:otherwise>
            </bpws:switch>
            <bpws:switch>
              <bpws:case condition="true()">
                <bpws:sequence>
                  <bpws:assign name="GraduallyBrightenLights_initialize_loopCounter">
                    <bpws:copy>
                      <bpws:from expression="0"/>
                      <bpws:to variable="GraduallyBrightenLights_loopCounter"/>
                    </bpws:copy>
                  </bpws:assign>
                  <bpws:while condition="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpDimStep') &lt; 100">
                    <bpws:sequence>
                      <bpws:scope name="GraduallyBrightenLights">
                        <bpws:sequence>
                          <bpws:wait name="w2s" for="'PT2S'"/>
                          <bpws:assign name="Lightson_startAssignments">
                            <bpws:copy>
                              <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpDimStep') + 10"/>
                              <bpws:to part="tmpDimStep" variable="LightAlarm_Process_ProcessData"/>
                            </bpws:copy>
                            <bpws:copy>
                              <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inRoomName')"/>
                              <bpws:to part="room" variable="SetValueRequest_MessageData"/>
                            </bpws:copy>
                            <bpws:copy>
                              <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inLightIDs')"/>
                              <bpws:to part="line" variable="SetValueRequest_MessageData"/>
                            </bpws:copy>
                            <bpws:copy>
                              <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpDimStep')"/>
                              <bpws:to part="value" variable="SetValueRequest_MessageData"/>
                            </bpws:copy>
                          </bpws:assign>
                          <bpws:invoke name="Lightson" inputVariable="SetValueRequest_MessageData" operation="SetValue" partnerLink="Ivistar" portType="ns1:IvistarProxyPT"/>
                        </bpws:sequence>
                      </bpws:scope>
                      <bpws:assign name="GraduallyBrightenLights_increment_loopCounter">
                        <bpws:copy>
                          <bpws:from expression="bpws:getVariableData('GraduallyBrightenLights_loopCounter') + 1"/>
                          <bpws:to variable="GraduallyBrightenLights_loopCounter"/>
                        </bpws:copy>
                      </bpws:assign>
                    </bpws:sequence>
                  </bpws:while>
                </bpws:sequence>
              </bpws:case>
              <bpws:otherwise>
                <bpws:empty/>
              </bpws:otherwise>
            </bpws:switch>
          </bpws:flow>
        </bpws:sequence>
      </bpws:case>
      <bpws:otherwise>
        <bpws:sequence>
          <bpws:empty name="toA"/>
          <bpws:empty name="A"/>
        </bpws:sequence>
      </bpws:otherwise>
    </bpws:switch>
    <bpws:assign name="log_startAssignments">
      <bpws:copy>
        <bpws:from expression="'monitoring position'"/>
        <bpws:to part="message" variable="logRequest_MessageData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="1"/>
        <bpws:to part="level" variable="logRequest_MessageData"/>
      </bpws:copy>
    </bpws:assign>
    <bpws:invoke name="log" inputVariable="logRequest_MessageData" operation="log" partnerLink="Logger" portType="ns1:LoggingPT"/>
    <bpws:switch>
      <bpws:case condition="bpws:getVariableData('LightAlarm_Process_ProcessData','inUseMusic')">
        <bpws:sequence>
          <bpws:assign name="StillinBed_startAssignments">
            <bpws:copy>
              <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inUsername')"/>
              <bpws:to part="username" variable="IsInZoneRequest_MessageData"/>
            </bpws:copy>
            <bpws:copy>
              <bpws:from expression="'Sofa'"/>
              <bpws:to part="zone" variable="IsInZoneRequest_MessageData"/>
            </bpws:copy>
          </bpws:assign>
          <bpws:invoke name="StillinBed" inputVariable="IsInZoneRequest_MessageData" operation="IsInZone" outputVariable="IsInZoneResponse_MessageData" partnerLink="LocationProvider" portType="ns1:SheaSimulatorPT"/>
          <bpws:assign name="StillinBed_endAssignments">
            <bpws:copy>
              <bpws:from expression="bpws:getVariableData('IsInZoneResponse_MessageData','isin')"/>
              <bpws:to part="tmpInBed" variable="LightAlarm_Process_ProcessData"/>
            </bpws:copy>
          </bpws:assign>
          <bpws:switch>
            <bpws:case condition="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpInBed') = 1">
              <bpws:sequence>
                <bpws:assign name="PlayMusic_startAssignments">
                  <bpws:copy>
                    <bpws:from expression="1"/>
                    <bpws:to part="paramState" variable="PlayPauseRequest_MessageData"/>
                  </bpws:copy>
                </bpws:assign>
                <bpws:invoke name="PlayMusic" inputVariable="PlayPauseRequest_MessageData" operation="PlayPause" partnerLink="Radio" portType="ns1:UPnPRadioPT"/>
                <bpws:wait name="wait" for="'PT2S'"/>
                <bpws:assign name="StillinBed_startAssignments">
                  <bpws:copy>
                    <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inUsername')"/>
                    <bpws:to part="username" variable="IsInZoneRequest_MessageData"/>
                  </bpws:copy>
                  <bpws:copy>
                    <bpws:from expression="'Sofa'"/>
                    <bpws:to part="zone" variable="IsInZoneRequest_MessageData"/>
                  </bpws:copy>
                </bpws:assign>
                <bpws:invoke name="StillinBed" inputVariable="IsInZoneRequest_MessageData" operation="IsInZone" outputVariable="IsInZoneResponse_MessageData" partnerLink="LocationProvider" portType="ns1:SheaSimulatorPT"/>
                <bpws:assign name="StillinBed_endAssignments">
                  <bpws:copy>
                    <bpws:from expression="bpws:getVariableData('IsInZoneResponse_MessageData','isin')"/>
                    <bpws:to part="tmpInBed" variable="LightAlarm_Process_ProcessData"/>
                  </bpws:copy>
                </bpws:assign>
                <bpws:while name="_StillinBed_FORK_loop" condition="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpInBed') = 1">
                  <bpws:sequence>
                    <bpws:empty name="IncreaseVolume"/>
                    <bpws:wait name="wait" for="'PT2S'"/>
                    <bpws:assign name="StillinBed_startAssignments">
                      <bpws:copy>
                        <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inUsername')"/>
                        <bpws:to part="username" variable="IsInZoneRequest_MessageData"/>
                      </bpws:copy>
                      <bpws:copy>
                        <bpws:from expression="'Sofa'"/>
                        <bpws:to part="zone" variable="IsInZoneRequest_MessageData"/>
                      </bpws:copy>
                    </bpws:assign>
                    <bpws:invoke name="StillinBed" inputVariable="IsInZoneRequest_MessageData" operation="IsInZone" outputVariable="IsInZoneResponse_MessageData" partnerLink="LocationProvider" portType="ns1:SheaSimulatorPT"/>
                    <bpws:assign name="StillinBed_endAssignments">
                      <bpws:copy>
                        <bpws:from expression="bpws:getVariableData('IsInZoneResponse_MessageData','isin')"/>
                        <bpws:to part="tmpInBed" variable="LightAlarm_Process_ProcessData"/>
                      </bpws:copy>
                    </bpws:assign>
                  </bpws:sequence>
                </bpws:while>
                <bpws:assign name="StopPlayback_startAssignments">
                  <bpws:copy>
                    <bpws:from expression="0"/>
                    <bpws:to part="paramState" variable="PlayPauseRequest_MessageData"/>
                  </bpws:copy>
                </bpws:assign>
                <bpws:invoke name="StopPlayback" inputVariable="PlayPauseRequest_MessageData" operation="PlayPause" partnerLink="Radio" portType="ns1:UPnPRadioPT"/>
              </bpws:sequence>
            </bpws:case>
            <bpws:otherwise>
              <bpws:empty name="_DO_NOTHING_"/>
            </bpws:otherwise>
          </bpws:switch>
        </bpws:sequence>
      </bpws:case>
      <bpws:otherwise>
        <bpws:sequence>
          <bpws:empty name="toB"/>
          <bpws:empty name="B"/>
        </bpws:sequence>
      </bpws:otherwise>
    </bpws:switch>
    <bpws:assign name="log_startAssignments">
      <bpws:copy>
        <bpws:from expression="'Process finished'"/>
        <bpws:to part="message" variable="logRequest_MessageData"/>
      </bpws:copy>
      <bpws:copy>
        <bpws:from expression="1"/>
        <bpws:to part="level" variable="logRequest_MessageData"/>
      </bpws:copy>
    </bpws:assign>
    <bpws:invoke name="log" inputVariable="logRequest_MessageData" operation="log" partnerLink="Logger" portType="ns1:LoggingPT"/>
    <bpws:empty name="End"/>
  </bpws:sequence>
</bpws:process>

RMI Registry erzeugen und Objekt registrieren:
    static {
        try {
            LocateRegistry.createRegistry(Registry.REGISTRY_PORT);
        } catch (RemoteException e) {
            LOGGER.error("Cannot create registry! Already running?");
        }
        try {
            LocateRegistry.getRegistry().rebind(RMI_NAME, getInstance());
            System.out.println("Bound TextInChannelManager to registry (name=" + RMI_NAME);
        } catch (AccessException e) {
            LOGGER.error("Cannot bind TextChannelManager to registry!", e);
        } catch (RemoteException e) {
            LOGGER.error("Cannot bind TextChannelManager to registry!", e);
        }
    }

Registrierte Klasse muss so aussehen:
	public class SomeClass extends UnicastRemoteObject implements SomeInterface;

Implementiertes Interface muss so aussehen:
	SomeInterface extends Remote;
Und alle Methoden des Interfaces müssen eine RemoteException werfen!!

Auf Button-Seite registriertes Objekt holen:
    private void lookupManager(String ip) {
        while (tcm == null) {
            try {
                this.tcm = (SomeInterface) Naming.lookup("rmi://" + ip + "/" + TextInChannelManager.RMI_NAME);
            } catch (MalformedURLException e) {
                throw new IllegalArgumentException("IP is not not valid!", e);
            } catch (NotBoundException e) {
                System.out.println("Manager with name '" + TextInChannelManager.RMI_NAME + "'not found in registry (reason = NotBoundException)! Retry.");
            } catch (RemoteException e) {
                System.out.println("Cannot connect to registry (reason = RemoteException)! Retry.");
            }
            try {
                Thread.sleep(2000);
            } catch (InterruptedException e) {
                //Nothing to do
            }
        }
        System.out.println("Got TextInChannelManager.");
    }

<?xml version="1.0" encoding="UTF-8"?>
<bpws:process xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns1="http://LightAlarm/WSDL/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/TR/1999/REC-xpath-19991116" name="LightAlarm" queryLanguage="http://www.w3.org/TR/1999/REC-xpath-19991116" targetNamespace="http://LightAlarm">
   <bpws:partnerLinks>
      <bpws:partnerLink myRole="LightAlarm_Participant_myRole" name="LightAlarm_Participant" partnerLinkType="ns1:LightAlarm_Participant_PLT"/>
      <bpws:partnerLink name="Logging_Participant" partnerLinkType="ns1:Logging_Participant_PLT" partnerRole="Logging_Participant_partnerRole"/>
      <bpws:partnerLink name="WeatherProxy_Participant" partnerLinkType="ns1:WeatherProxy_Participant_PLT" partnerRole="WeatherProxy_Participant_partnerRole"/>
      <bpws:partnerLink name="IvistarProxy_Participant" partnerLinkType="ns1:IvistarProxy_Participant_PLT" partnerRole="IvistarProxy_Participant_partnerRole"/>
      <bpws:partnerLink name="SheaSimulator_Participant" partnerLinkType="ns1:SheaSimulator_Participant_PLT" partnerRole="SheaSimulator_Participant_partnerRole"/>
      <bpws:partnerLink name="UPnPRadio_Participant" partnerLinkType="ns1:UPnPRadio_Participant_PLT" partnerRole="UPnPRadio_Participant_partnerRole"/>
   </bpws:partnerLinks>
   <bpws:variables>
      <bpws:variable messageType="ns1:initProcessRequest_MessageDataMessage" name="initProcessRequest_MessageData"/>
      <bpws:variable messageType="ns1:logRequest_MessageDataMessage" name="logRequest_MessageData"/>
      <bpws:variable messageType="ns1:GetWeatherRequest_MessageDataMessage" name="GetWeatherRequest_MessageData"/>
      <bpws:variable messageType="ns1:GetWeatherResponse_MessageDataMessage" name="GetWeatherResponse_MessageData"/>
      <bpws:variable messageType="ns1:SetValueRequest_MessageDataMessage" name="SetValueRequest_MessageData"/>
      <bpws:variable name="GraduallyBrightenLights_loopCounter" type="xsd:integer"/>
      <bpws:variable messageType="ns1:IsInZoneRequest_MessageDataMessage" name="IsInZoneRequest_MessageData"/>
      <bpws:variable messageType="ns1:IsInZoneResponse_MessageDataMessage" name="IsInZoneResponse_MessageData"/>
      <bpws:variable messageType="ns1:PlayRequest_MessageDataMessage" name="PlayRequest_MessageData"/>
      <bpws:variable messageType="ns1:PauseRequest_MessageDataMessage" name="PauseRequest_MessageData"/>
      <bpws:variable messageType="ns1:LightAlarm_Process_ProcessDataMessage" name="LightAlarm_Process_ProcessData"/>
   </bpws:variables>
   <bpws:sequence>
      <bpws:receive createInstance="yes" name="Start" operation="initProcess" partnerLink="LightAlarm_Participant" portType="ns1:LightAlarmPT" variable="initProcessRequest_MessageData"/>
      <bpws:assign name="LightAlarm_startAssignments_and_Start_endAssignments_and_log_startAssignments">
         <bpws:copy>
            <bpws:from expression="0"/>
            <bpws:to part="tmpDimStep" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="0"/>
            <bpws:to part="tmpVolume" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="bpws:getVariableData('initProcessRequest_MessageData','paramUsername')"/>
            <bpws:to part="inUsername" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="bpws:getVariableData('initProcessRequest_MessageData','paramWaketime')"/>
            <bpws:to part="inWaketime" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="bpws:getVariableData('initProcessRequest_MessageData','paramRoomName')"/>
            <bpws:to part="inRoomName" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="bpws:getVariableData('initProcessRequest_MessageData','paramLightIDs')"/>
            <bpws:to part="inLightIDs" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="bpws:getVariableData('initProcessRequest_MessageData','paramBlindsIDs')"/>
            <bpws:to part="inBlindsIDs" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="bpws:getVariableData('initProcessRequest_MessageData','paramCity')"/>
            <bpws:to part="inCity" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="bpws:getVariableData('initProcessRequest_MessageData','paramCountry')"/>
            <bpws:to part="inCountry" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="bpws:getVariableData('initProcessRequest_MessageData','paramUseLight')"/>
            <bpws:to part="inUseLight" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="bpws:getVariableData('initProcessRequest_MessageData','paramUseMusic')"/>
            <bpws:to part="inUseMusic" variable="LightAlarm_Process_ProcessData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="'Process started'"/>
            <bpws:to part="message" variable="logRequest_MessageData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="1"/>
            <bpws:to part="level" variable="logRequest_MessageData"/>
         </bpws:copy>
      </bpws:assign>
      <bpws:invoke inputVariable="logRequest_MessageData" name="log" operation="log" partnerLink="Logging_Participant" portType="ns1:LoggingPT"/>
      <bpws:wait name="waketime" until="bpws:getVariableData('LightAlarm_Process_ProcessData','inWaketime')"/>
      <bpws:switch name="BpmnBlock">
         <bpws:case condition="bpws:getVariableData('LightAlarm_Process_ProcessData','inUseLight')">
            <bpws:sequence name="BpmnSequence">
               <bpws:assign name="GetWeather_startAssignments">
                  <bpws:copy>
                     <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inCity')"/>
                     <bpws:to part="city" variable="GetWeatherRequest_MessageData"/>
                  </bpws:copy>
                  <bpws:copy>
                     <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inCountry')"/>
                     <bpws:to part="country" variable="GetWeatherRequest_MessageData"/>
                  </bpws:copy>
               </bpws:assign>
               <bpws:invoke inputVariable="GetWeatherRequest_MessageData" name="GetWeather" operation="GetWeather" outputVariable="GetWeatherResponse_MessageData" partnerLink="WeatherProxy_Participant" portType="ns1:WeatherProxyPT"/>
               <bpws:assign name="GetWeather_endAssignments_and_log_startAssignments">
                  <bpws:copy>
                     <bpws:from expression="bpws:getVariableData('GetWeatherResponse_MessageData','weatherdata')"/>
                     <bpws:to part="tmpWeather" variable="LightAlarm_Process_ProcessData"/>
                  </bpws:copy>
                  <bpws:copy>
                     <bpws:from expression="concat('got weather: ' , bpws:getVariableData('LightAlarm_Process_ProcessData','tmpWeather'))"/>
                     <bpws:to part="message" variable="logRequest_MessageData"/>
                  </bpws:copy>
                  <bpws:copy>
                     <bpws:from expression="1"/>
                     <bpws:to part="level" variable="logRequest_MessageData"/>
                  </bpws:copy>
               </bpws:assign>
               <bpws:invoke inputVariable="logRequest_MessageData" name="log" operation="log" partnerLink="Logging_Participant" portType="ns1:LoggingPT"/>
               <bpws:flow name="BpmnBlock">
                  <bpws:switch>
                     <bpws:case condition="true()">
                        <bpws:sequence name="Blindsup">
                           <bpws:assign name="Blindsup_startAssignments">
                              <bpws:copy>
                                 <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inRoomName')"/>
                                 <bpws:to part="room" variable="SetValueRequest_MessageData"/>
                              </bpws:copy>
                              <bpws:copy>
                                 <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inBlindsIDs')"/>
                                 <bpws:to part="line" variable="SetValueRequest_MessageData"/>
                              </bpws:copy>
                              <bpws:copy>
                                 <bpws:from expression="'100'"/>
                                 <bpws:to part="value" variable="SetValueRequest_MessageData"/>
                              </bpws:copy>
                           </bpws:assign>
                           <bpws:invoke inputVariable="SetValueRequest_MessageData" name="Blindsup" operation="SetValue" partnerLink="IvistarProxy_Participant" portType="ns1:IvistarProxyPT"/>
                        </bpws:sequence>
                     </bpws:case>
                     <bpws:otherwise>
                        <bpws:empty/>
                     </bpws:otherwise>
                  </bpws:switch>
                  <bpws:switch>
                     <bpws:case condition="true()">
                        <bpws:sequence name="GraduallyBrightenLights">
                           <bpws:assign name="GraduallyBrightenLights_initialize_loopCounter">
                              <bpws:copy>
                                 <bpws:from expression="0"/>
                                 <bpws:to variable="GraduallyBrightenLights_loopCounter"/>
                              </bpws:copy>
                           </bpws:assign>
                           <bpws:while condition="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpDimStep') &lt; 100">
                              <bpws:sequence>
                                 <bpws:scope name="GraduallyBrightenLights">
                                    <bpws:sequence name="BpmnSequence">
                                       <bpws:wait for="'PT2S'" name="w2s"/>
                                       <bpws:assign name="Lightson_startAssignments">
                                          <bpws:copy>
                                             <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpDimStep') + 10"/>
                                             <bpws:to part="tmpDimStep" variable="LightAlarm_Process_ProcessData"/>
                                          </bpws:copy>
                                          <bpws:copy>
                                             <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inRoomName')"/>
                                             <bpws:to part="room" variable="SetValueRequest_MessageData"/>
                                          </bpws:copy>
                                          <bpws:copy>
                                             <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inLightIDs')"/>
                                             <bpws:to part="line" variable="SetValueRequest_MessageData"/>
                                          </bpws:copy>
                                          <bpws:copy>
                                             <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpDimStep')"/>
                                             <bpws:to part="value" variable="SetValueRequest_MessageData"/>
                                          </bpws:copy>
                                       </bpws:assign>
                                       <bpws:invoke inputVariable="SetValueRequest_MessageData" name="Lightson" operation="SetValue" partnerLink="IvistarProxy_Participant" portType="ns1:IvistarProxyPT"/>
                                    </bpws:sequence>
                                 </bpws:scope>
                                 <bpws:assign name="GraduallyBrightenLights_increment_loopCounter">
                                    <bpws:copy>
                                       <bpws:from expression="bpws:getVariableData('GraduallyBrightenLights_loopCounter') + 1"/>
                                       <bpws:to variable="GraduallyBrightenLights_loopCounter"/>
                                    </bpws:copy>
                                 </bpws:assign>
                              </bpws:sequence>
                           </bpws:while>
                        </bpws:sequence>
                     </bpws:case>
                     <bpws:otherwise>
                        <bpws:empty/>
                     </bpws:otherwise>
                  </bpws:switch>
               </bpws:flow>
            </bpws:sequence>
         </bpws:case>
      </bpws:switch>
      <bpws:assign name="log_startAssignments">
         <bpws:copy>
            <bpws:from expression="'monitoring position'"/>
            <bpws:to part="message" variable="logRequest_MessageData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="1"/>
            <bpws:to part="level" variable="logRequest_MessageData"/>
         </bpws:copy>
      </bpws:assign>
      <bpws:invoke inputVariable="logRequest_MessageData" name="log" operation="log" partnerLink="Logging_Participant" portType="ns1:LoggingPT"/>
      <bpws:switch name="BpmnBlock">
         <bpws:case condition="bpws:getVariableData('LightAlarm_Process_ProcessData','inUseMusic')">
            <bpws:sequence name="BpmnSequence">
               <bpws:assign name="StillinBed_startAssignments">
                  <bpws:copy>
                     <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inUsername')"/>
                     <bpws:to part="username" variable="IsInZoneRequest_MessageData"/>
                  </bpws:copy>
                  <bpws:copy>
                     <bpws:from expression="'Sofa'"/>
                     <bpws:to part="zone" variable="IsInZoneRequest_MessageData"/>
                  </bpws:copy>
               </bpws:assign>
               <bpws:invoke inputVariable="IsInZoneRequest_MessageData" name="StillinBed" operation="IsInZone" outputVariable="IsInZoneResponse_MessageData" partnerLink="SheaSimulator_Participant" portType="ns1:SheaSimulatorPT"/>
               <bpws:assign name="StillinBed_endAssignments">
                  <bpws:copy>
                     <bpws:from expression="bpws:getVariableData('IsInZoneResponse_MessageData','isin')"/>
                     <bpws:to part="tmpInBed" variable="LightAlarm_Process_ProcessData"/>
                  </bpws:copy>
               </bpws:assign>
               <bpws:switch name="BpmnBlock">
                  <bpws:case condition="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpInBed') = 1">
                     <bpws:sequence name="BpmnSequence">
                        <bpws:invoke inputVariable="PlayRequest_MessageData" name="PlayMusic" operation="Play" partnerLink="UPnPRadio_Participant" portType="ns1:UPnPRadioPT"/>
                        <bpws:wait for="'PT2S'" name="wait"/>
                        <bpws:assign name="StillinBed_startAssignments">
                           <bpws:copy>
                              <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inUsername')"/>
                              <bpws:to part="username" variable="IsInZoneRequest_MessageData"/>
                           </bpws:copy>
                           <bpws:copy>
                              <bpws:from expression="'Sofa'"/>
                              <bpws:to part="zone" variable="IsInZoneRequest_MessageData"/>
                           </bpws:copy>
                        </bpws:assign>
                        <bpws:invoke inputVariable="IsInZoneRequest_MessageData" name="StillinBed" operation="IsInZone" outputVariable="IsInZoneResponse_MessageData" partnerLink="SheaSimulator_Participant" portType="ns1:SheaSimulatorPT"/>
                        <bpws:assign name="StillinBed_endAssignments">
                           <bpws:copy>
                              <bpws:from expression="bpws:getVariableData('IsInZoneResponse_MessageData','isin')"/>
                              <bpws:to part="tmpInBed" variable="LightAlarm_Process_ProcessData"/>
                           </bpws:copy>
                        </bpws:assign>
                        <bpws:while condition="bpws:getVariableData('LightAlarm_Process_ProcessData','tmpInBed') = 1" name="_StillinBed_FORK_loop">
                           <bpws:sequence>
                              <bpws:empty name="IncreaseVolume"/>
                              <bpws:wait for="'PT2S'" name="wait"/>
                              <bpws:assign name="StillinBed_startAssignments">
                                 <bpws:copy>
                                    <bpws:from expression="bpws:getVariableData('LightAlarm_Process_ProcessData','inUsername')"/>
                                    <bpws:to part="username" variable="IsInZoneRequest_MessageData"/>
                                 </bpws:copy>
                                 <bpws:copy>
                                    <bpws:from expression="'Sofa'"/>
                                    <bpws:to part="zone" variable="IsInZoneRequest_MessageData"/>
                                 </bpws:copy>
                              </bpws:assign>
                              <bpws:invoke inputVariable="IsInZoneRequest_MessageData" name="StillinBed" operation="IsInZone" outputVariable="IsInZoneResponse_MessageData" partnerLink="SheaSimulator_Participant" portType="ns1:SheaSimulatorPT"/>
                              <bpws:assign name="StillinBed_endAssignments">
                                 <bpws:copy>
                                    <bpws:from expression="bpws:getVariableData('IsInZoneResponse_MessageData','isin')"/>
                                    <bpws:to part="tmpInBed" variable="LightAlarm_Process_ProcessData"/>
                                 </bpws:copy>
                              </bpws:assign>
                           </bpws:sequence>
                        </bpws:while>
                        <bpws:invoke inputVariable="PauseRequest_MessageData" name="StopPlayback" operation="Pause" partnerLink="UPnPRadio_Participant" portType="ns1:UPnPRadioPT"/>
                     </bpws:sequence>
                  </bpws:case>
               </bpws:switch>
            </bpws:sequence>
         </bpws:case>
      </bpws:switch>
      <bpws:assign name="log_startAssignments">
         <bpws:copy>
            <bpws:from expression="'Process finished'"/>
            <bpws:to part="message" variable="logRequest_MessageData"/>
         </bpws:copy>
         <bpws:copy>
            <bpws:from expression="1"/>
            <bpws:to part="level" variable="logRequest_MessageData"/>
         </bpws:copy>
      </bpws:assign>
      <bpws:invoke inputVariable="logRequest_MessageData" name="log" operation="log" partnerLink="Logging_Participant" portType="ns1:LoggingPT"/>
      <bpws:empty name="End"/>
   </bpws:sequence>
</bpws:process>
